version: '3.8'

networks:
  internal:

volumes:
  prometheus_data: {}
  grafana_data: {}

services:

  postgres:
    image: postgres:11.4-alpine
    container_name: postgres
    volumes:
      - ./psql/:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_MULTIPLE_DATABASES: "backend"
      POSTGRES_USER: test
      POSTGRES_PASSWORD: YqelfkqoivjffuFÄ‘
      POSTGRES_HOST: 0.0.0.0
      POSTRES_PORT: 5432
    restart: always
    networks:
      - internal
    ports:
      - "5432:5432"

  prometheus:
    image: prom/prometheus
    restart: always
    volumes:
      - ./prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - internal
    ports:
      - "9090:9090"
    links:
      - alertmanager:alertmanager

  alertmanager:
    image: prom/alertmanager
    restart: always
    networks:
      - internal
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  grafana:
    image: grafana/grafana
    user: '472'
    restart: always
    environment:
      GF_INSTALL_PLUGINS: 'grafana-clock-panel,grafana-simple-json-datasource'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - internal
    ports:
      - "3000:3000"
    depends_on:
      - prometheus